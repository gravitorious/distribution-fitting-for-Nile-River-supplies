help()
x=rweibull(n = 1000, shape = 0.9, scale = 1)
EmpCdf(x)
# Estimate some basic statistics
mu = mean(x) # Estimate the empirical mean
std = sd(x) # Estimate the empirical st. deviation
VAR = var(x) # Estimate the empirical variance
skew = moments::skewness(x) # Estimate the empirical skewness
kurt = moments::kurtosis(x) # Estimate the empirical kurtosis
# Distribution fitting with L-moments
# install.packages("lmom")
library(lmom)
# Fit the Gamma distribution to the data
fitGam = lmom::pelgam(lmom = emplmom)
# Estimate the empirical L-moments
emplmom = lmom::samlmu(x = x, nmom = 4, ratios = T)
# Fit the Gamma distribution to the data
fitGam = lmom::pelgam(lmom = emplmom)
temp = seq(from = 0, to = 5, by =0.0001)
Theor_Gam = lmom::cdfgam(x = temp, para = fitGam)
fitGam
library(xts)
library(lmom)
library(lubridate)
library(moments)
library(lmom)
library(fitdistrplus)
# Load functions ----
# we assume that functions are in the same folder with the current file
source("get_month.R")
source("EmpCdf.R")
# create folder that we will store plots
foldername = "gammadistr"
dir.create(foldername)
# Load time series and create the appropriate xts object----
fileName = "NileData_BCM.txt"
filedata = read.csv(file = fileName)
head(rownames(filedata))
alldata = xts(x = filedata$data, order.by = as.Date(filedata$Date))
colnames(alldata) = "data"
#choose start and end day
startday = "1871-01-01"; endDay = "1944-12-01"
maindata = alldata[paste(startday, endDay, sep = "/")]
#hist(maindata)
#plot(maindata)
# Calculate mean, standard deviation and skewness for each month ----
means = rep(NA, 12)
stds = rep(NA, 12)
skwns = rep(NA, 12)
for(i in 1:12){
sample = get_month(maindata, i, 1)
means[i] = mean(sample)
stds[i] = sd(sample)
skwns[i] = moments::skewness(sample)
}
# Calculate empirical moments ----
lmoments = list()
ratiomom = list()
for(i in 1:12){
sample = get_month(maindata, i, 1)
lmoments[[i]] = lmom::samlmu(x = sample, nmom = 3, ratios = F) #calculate L1, L2, L3
ratiomom[[i]] = c(lmoments[[i]][2]/lmoments[[i]][1], lmoments[[i]][3]/lmoments[[i]][2]) #calculate the L-variation and L-skewness via L2/L1 and L3/L2
}
# Fit the gamma distribution to the data ----
layout_matrix <- matrix(1:6, ncol = 3)
layout(layout_matrix)
#Vector of quantiles
gamdis = list()
thgam = list()
for(i in 1:12){
sample = get_month(maindata, i, 1)
a = EmpCdf(sample, i, 0)
temp = seq(from = 0, to = max(a[, 2])+1, by = 0.0001)
gamdis[[i]] = lmom::pelgam(lmom = lmoments[[i]]) #we pass the first 3 moments, but L3 is not used
thgam[[i]] = lmom::cdfgam(x=temp,para = gamdis[[i]])
}
setwd("~/distribution-fitting-for-Nile-River-supplies")
library(xts)
library(lmom)
library(lubridate)
library(moments)
library(lmom)
library(fitdistrplus)
# Load functions ----
# we assume that functions are in the same folder with the current file
source("get_month.R")
source("EmpCdf.R")
# create folder that we will store plots
foldername = "gammadistr"
dir.create(foldername)
# Load time series and create the appropriate xts object----
fileName = "NileData_BCM.txt"
filedata = read.csv(file = fileName)
head(rownames(filedata))
alldata = xts(x = filedata$data, order.by = as.Date(filedata$Date))
colnames(alldata) = "data"
#choose start and end day
startday = "1871-01-01"; endDay = "1944-12-01"
maindata = alldata[paste(startday, endDay, sep = "/")]
#hist(maindata)
#plot(maindata)
# Calculate mean, standard deviation and skewness for each month ----
means = rep(NA, 12)
stds = rep(NA, 12)
skwns = rep(NA, 12)
for(i in 1:12){
sample = get_month(maindata, i, 1)
means[i] = mean(sample)
stds[i] = sd(sample)
skwns[i] = moments::skewness(sample)
}
# Calculate empirical moments ----
lmoments = list()
ratiomom = list()
for(i in 1:12){
sample = get_month(maindata, i, 1)
lmoments[[i]] = lmom::samlmu(x = sample, nmom = 3, ratios = F) #calculate L1, L2, L3
ratiomom[[i]] = c(lmoments[[i]][2]/lmoments[[i]][1], lmoments[[i]][3]/lmoments[[i]][2]) #calculate the L-variation and L-skewness via L2/L1 and L3/L2
}
# Fit the gamma distribution to the data ----
layout_matrix <- matrix(1:6, ncol = 3)
layout(layout_matrix)
#Vector of quantiles
gamdis = list()
thgam = list()
for(i in 1:12){
sample = get_month(maindata, i, 1)
a = EmpCdf(sample, i, 0)
temp = seq(from = 0, to = max(a[, 2])+1, by = 0.0001)
gamdis[[i]] = lmom::pelgam(lmom = lmoments[[i]]) #we pass the first 3 moments, but L3 is not used
thgam[[i]] = lmom::cdfgam(x=temp,para = gamdis[[i]])
}
# Plot empirical and theoretical CDF by each month ----
for(i in 1:6){
sample = get_month(maindata, i, 1)
#plot to file
plotfile = gsub(" ", "", paste(foldername, "/Month", i, ".png", sep = ""))
png(file=plotfile, width=600, height=350)
a = EmpCdf(sample, i)
temp = seq(from = 0, to = max(a[, 2])+1, by = 0.0001)
lines(temp, thgam[[i]], col='magenta', lwd = 3)
dev.off()
#plot to screen
a = EmpCdf(sample, i)
lines(temp, thgam[[i]], col='magenta', lwd = 3)
}
layout_matrix2 <- matrix(1:6, ncol = 3)
layout(layout_matrix2)
for(i in 7:12){
sample = get_month(maindata, i, 1)
#plot to file
plotfile = gsub(" ", "", paste(foldername, "/Month", i, ".png", sep = ""))
png(file=plotfile, width=600, height=350)
a = EmpCdf(sample, i)
temp = seq(from = 0, to = max(a[, 2])+1, by = 0.0001)
lines(temp, thgam[[i]], col='magenta', lwd = 3)
dev.off()
#plot to screen
a = EmpCdf(sample, i)
lines(temp, thgam[[i]], col='magenta', lwd = 3)
}
yearlyfolder = "yearlyfolder"
dir.create(yearlyfolder)
#create a time series expressing the mean Nile River supplies for each year ----
ymaindata = xts::apply.yearly(x = maindata, mean)
plotfile = gsub(" ", "", paste(yearlyfolder, "/yearlyplot.png", sep = ""))
png(file=plotfile, width=600, height=350)
plot(ymaindata)
dev.off()
